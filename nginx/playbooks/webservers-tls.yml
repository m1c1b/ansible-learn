#!/usr/bin/env ansible-playbook
---
- name: Configure wevserver with nginx
  hosts: servers
  become: True
  vars:
    tls_dir: /etc/nginx/ssl/
    key_file: nginx.key
    cert_file: nginx.crt
    nginx_conf: /etc/nginx/nginx.conf
    sites_avail: /etc/nginx/sites-available
    sites_enabled: /etc/nginx/sites-enabled
    index: /usr/share/nginx/html/index.html
    server_name: local-rocky-0
  handlers:
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

  tasks:
    - name: Ensure nginx is installed
      package:
        name: nginx
        update_cache: true

    - name: Creates nginx dir if not
      ansible.builtin.file:
        path: "{{ sites_enabled}}"
        state: directory
        owner: root
        group: root
        mode: 0744
        recurse: yes

    - name: Creates nginx dir if not
      ansible.builtin.file:
        path: "{{ sites_avail }}"
        state: directory
        owner: root
        group: root
        mode: 0744
        recurse: yes

    - name: Manage ngix cfg template
      template:
        src: nginx.conf.j2
        dest: "{{ nginx_conf }}"
        mode: '0644'
      notify: Restart nginx

    - name: Enable configuration
      file:
        dest: "{{ sites_enabled }}/default"
        src: "{{ sites_avail }}/default"
        state: link

    - name: Copy index.html
      template:
        src: index.html.j2
        dest: "{{ index }}"
        mode: '0644'
      notify: Restart nginx

    - name: Copy TLS files
      copy:
        src: "{{ item }}"
        dest: "{{ tls_dir }}"
        mode: '0600'
      loop:
        - "{{ key_file }}"
        - "{{ cert_file }}"
      notify: Restart nginx

    - name: Install home page
      template:
        src: index.html.j2
        dest: /usr/share/nginx/html/index.html
        mode: '0644'

    - name: Restart nginx
      meta: flush_handlers

    - name: "Test it! https://192.168.1.148/index.html"
      delegate_to: localhost
      become: false
      uri:
        url: 'https://192.168.1.148/index.html'
        validate_certs: false
        return_content: true
      register: this
      failed_when: "'Running on ' not in this.content"
      tags:
        - test